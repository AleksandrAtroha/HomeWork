package home_work_1;

public class SecondTask {
    public static void main(String[] args) {
        int a = 2;
        int b = 8;
        int result1 =  5+ 2/8; // Результат:5, первое выполняется 2/8=0 и прибавляется 5
        System.out.println("Результат 1 = " + result1);
        int result2 =  (5+ 2)/8; // Результат:0, первое выполняется, что в скобках (5+2)=7 после 7/8=0
        System.out.println("Результат 2 = " + result2);
        int result3 =  (5 + a++)/8; // Результат:0. Т.к. a++ пост-унарный,то а++=2, первое выполняется, что в скобках (5+2)=7 после 7/8=0, a=3
        System.out.println("Результат 3 = " + result3);;
        int result4 =  5 * 2 >> a++; // Результат:1.  a=3 пост-унарный,то а++=3, 5*2=10, происходит сдвиг вправо на 3 00001010>>3=00000001= 1, a=4
        System.out.println("Результат 4 = " + result4);
        int result5 =  (5 + 7 > 20 ? 68 : 22 * 2 >> a++) / --b; // Результат:0. 5+7<20, значит сработает условие 22 * 2 >> a++, 44 смещаем вправо на 4: 00101100>>4 = 00000010 = 2, --b=7, 2/7=0
        System.out.println("Результат 5 = " + result5);
       /// int result6 =  (5 + 7 > 20 ? 68 >= 68 : 22 * 2 >> a++) / --b; //Оператор "/" используется для деления двух чисел. В данном случае, один из операндов является типом интерфейса, а не числом. Поэтому компилятор выдает сообщение об ошибке.
       // System.out.println("Результат 6 = " + result6);
        boolean result7 = 6 - 2 > 3 && 12 * 12 <= 119; //Результат:false. 4>3- True, 144<=119 - False. && (И) возвращает true, если слева и справа от него стоят значения true, а иначе — false
        System.out.println("Результат 7 = " + result7);
        boolean result8 = true && false; //Результат:false. Как и в 7 примере.&& (И) возвращает true, если слева и справа от него стоят значения true, а иначе — false
        System.out.println("Результат 8 = " + result8);
    }
}
